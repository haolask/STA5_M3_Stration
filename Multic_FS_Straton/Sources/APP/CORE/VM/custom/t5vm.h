/*
T5 RunTime for ACTIA
COPALP / ACTIA

THIS FILE IS GENERATED BY T5DK WIZARD.
DO NOT ENTER CHANGES DIRECLY - USE T5DK TO MAINTAIN IT!

(c) COPALP 2002
*/

#ifndef _T5VM_H_INCLUDED_
#define _T5VM_H_INCLUDED_

/* T5DK Wizard version info */
#define T5_DKVERSION "9.0.151216"
#define T5_DKVERS_H 9
#define T5_DKVERS_M 0
#define T5_DKVERS_L 1

/* Runtime identification */
#define T5_AUTHOR "COPALP / ACTIA"
#define T5_DESCRIPTION "T5 RunTime for ACTIA"
#define T5_CAPSGROUP1 0x496C7E3FL
#define T5_CAPSGROUP2 0x00E08161L

#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
#include <ctype.h>
#include "t5extras.h"

#ifdef __cplusplus
extern "C" {
#endif

/* endian */
#undef  T5DEF_BIGENDIAN

/* strings - convert default to ANSI */
#define T5_ASCII(s)       (s)

/* Target identification */
#define T5DEF_TARGETVERS "1.00"
#ifdef T5DEF_BIGENDIAN
#define T5DEF_TARGET     "T5RTM"
#define T5DEF_TARGETCODE ".XTM"
#else
#define T5DEF_TARGET     "T5RTI"
#define T5DEF_TARGETCODE ".XTI"
#endif

/* Use of registers */
#define T5_RD8_REGISTER   /* nothing */
#define T5_RDINT_REGISTER /* nothing */
#define T5_RTIME_REGISTER /* nothing */
#define T5_LOCK_REGISTER  /* nothing */
#define T5_REAL_REGISTER  /* nothing */

/* Features */
#undef  T5DEF_ALWAYSSTARTPAUSED
#define T5DEF_DONTFORCELOCKEDVARS
#define T5DEF_SINTSUPPORTED
#define T5DEF_DATA16SUPPORTED
#define T5DEF_REALSUPPORTED
#define T5DEF_ACTIMESUPPORTED
#define T5DEF_STRINGSUPPORTED
#undef  T5DEF_DATA64SUPPORTED
#undef  T5DEF_LREALSUPPORTED
#undef  T5DEF_LINTSUPPORTED
#undef  T5DEF_ULINTSUPPORTED
#define T5DEF_USINTSUPPORTED
#define T5DEF_UINTSUPPORTED
#define T5DEF_UDINTSUPPORTED
#define T5DEF_DOTBITSUPPORTED
#define T5DEF_MATHSUPPORTED
#define T5DEF_TRIGOSUPPORTED
#undef  T5DEF_RANDOMSUPPORTED
#undef  T5DEF_MALLOCSUPPORTED
#undef  T5DEF_FILESUPPORTED
#undef  T5DEF_FILEMGT
#undef  T5DEF_FILEV2
#define T5DEF_RTCLOCKSUPPORTED
#define T5DEF_SERIALIZEDATA
#undef  T5DEF_LIBSOCK
#undef  T5DEF_CSM5
#define T5DEF_RECIPES
#define T5DEF_VLST
#define T5DEF_STRINGTABLE
#define T5DEF_SIGNAL
#undef  T5DEF_TXB
#undef  T5DEF_XML
#undef  T5DEF_UNICODE
#define  T5DEF_BARRAY
#undef  T5DEF_ACCEPTMISSINGHANDLER
#define T5DEF_RETAIN
#undef  T5DEF_HOTRESTART
#undef  T5DEF_ONLINECHANGE
#define T5DEF_SFC
#undef  T5DEF_DLLBLOCKS
#undef  T5DEF_DLLIOS
#define T5DEF_ETHERNET
#undef  T5DEF_SOCKETV2
#undef  T5DEF_UDP
#undef  T5DEF_CSDISC
#define T5DEF_SERIAL
#undef  T5DEF_TCPCLIENT
#undef  T5DEF_MODBUSIOS
#undef  T5DEF_MBSTCP
#undef  T5DEF_MBSREADQ
#undef  T5DEF_ASI
#define T5DEF_CANBUS
#undef  T5DEF_CANRAW
#define T5DEF_VARMAP
#define T5DEF_XV
#undef  T5DEF_BSAMPLING
#define T5DEF_RTCLOCKSTAMP
#define T5DEF_RTCLOCKSTAMPENH
#undef  T5DEF_EVENTSERVER
#undef  T5DEF_EA
#undef  T5DEF_EAHYSTER
#undef  T5DEF_FT
#undef  T5DEF_SP5
#undef  T5DEF_NOPCSWITCH
#undef  T5DEF_REG
#define T5DEF_VFS
#define T5DEF_CTSEG

/* Safe mode */
#undef  T5DEF_TICSAFE
#define T5DEF_TICSAFEMAXINST 0

/* Sizing */
#define T5MAX_LOG        16
#define T5MAX_SYSRSC     8
#define T5MAX_EXECBUFFER 1024
#define T5MAX_FRAME      1024
#define T5MAX_UNRES      16
#define T5MAX_PORT       3
#define T5MAX_TASK       8
#undef T5MAX_EVCLIENT
#define T5MAX_EACHANGE   1
#define T5MAX_EAFRM  0x00000400L

/* Data types */
typedef TS8 T5_CHAR;
typedef TS16 T5_SHORT;
typedef TS32 T5_LONG;
typedef TU8 T5_BOOL;
typedef TU8 T5_BYTE;
typedef TU16 T5_WORD;
typedef TU32 T5_DWORD;
typedef float T5_REAL;
typedef double T5_LREAL;
typedef TS64 T5_LINT;
typedef TU64 T5_LWORD;
typedef TU16 T5_RET;
typedef void * T5_PTR;
#define T5_PTNULL NULL
typedef T5_CHAR * T5_PTCHAR;
typedef T5_SHORT * T5_PTSHORT;
typedef T5_LONG * T5_PTLONG;
typedef T5_BOOL * T5_PTBOOL;
typedef T5_BYTE * T5_PTBYTE;
typedef T5_WORD * T5_PTWORD;
typedef T5_DWORD * T5_PTDWORD;
typedef T5_REAL * T5_PTREAL;
typedef T5_LREAL * T5_PTLREAL;
typedef T5_LINT * T5_PTLINT;
typedef T5_LWORD * T5_PTLWORD;
typedef double T5_DATA64;
typedef T5_DATA64 * T5_PTDATA64;
typedef TS8 T5_STRING8[8];
typedef TS8 T5_STRING16[16];
typedef TS8 T5_STRING32[32];
typedef TS8 T5_STRING64[64];
typedef T5_DWORD (*T5_HND)();
#define T5_HNDNULL NULL

/* Trace */
#undef  T5DEF_PRINTFSUPPORTED
#undef T5DEF_TRACEFRAMES

#define T5TRACE(s)        /* nothing */
#define T5TRACEDW(s,d)    /* nothing */
#define T5TRACECOM(s)     /* nothing */
#define T5TRACECOMDW(s,d) /* nothing */
#define T5_PRINTF         /* nothing */
#undef T5DEF_TRACEPORT

/* C library */
#ifndef FALSE
#define FALSE         0
#endif
#ifndef TRUE
#define TRUE          1
#endif
#define T5_STRCPY(d,s)   DstWMonitor_eApplication_Function.ppcAPI_eStrcpy_Exe ((char *)(d), (const char *)(s))
#define T5_STRCAT(d,s)   DstWMonitor_eApplication_Function.ppcAPI_eStrcat_Exe ((char *)(d), (const char *)(s))
#define T5_STRCMP(s1,s2) DstWMonitor_eApplication_Function.ppiAPI_eStrcmp_Exe ((char *)(s1), (const char *)(s2))
#define T5_STRLEN(s)     DstWMonitor_eApplication_Function.ppiAPI_eStrlen_Exe ((char *)(s))
#define T5_MEMSET(p,b,n) DstWMonitor_eApplication_Function.ppvAPI_eMemset_Exe ((void*)(p), (int)(b), (unsigned long)(n))
#define T5_MEMCPY(d,s,n) DstWMonitor_eApplication_Function.ppcAPI_eMemcpy_Exe ((char*)(d), (const char*)(s), (unsigned long)(n))
#define T5_MEMMOVE(d,s,n) DstWMonitor_eApplication_Function.ppcAPI_eMemmove_Exe ((char*)(d), (const char*)(s), (unsigned long)(n))
#define T5_MEMCMP(d,s,n) DstWMonitor_eApplication_Function.ppiAPI_eMemcmp_Exe ((char*)(d), (const char*)(s), (unsigned long)(n))
#define T5_ATOI(s)       DstWMonitor_eApplication_Function.ppiAPI_eAtoi_Exe ((char *)(s))
#define T5_ATOF(s)       DstWMonitor_eApplication_Function.ppiAPI_eAtof_Exe ((char *)(s))
#define T5_MALLOC(n)     DstWMonitor_eApplication_Function.ppvAPI_eMalloc_Exe ((unsigned int)(n))
#define T5_FREE(p)       DstWMonitor_eApplication_Function.pvAPI_eFree_Exe ((void *)(p))
#define T5_LTOA(s,l)     DstWMonitor_eApplication_Function.ppiAPI_eLTOA_Exe ((char *)(s), "%ld", (long)(l))
#define T5_RTOA(s,r)     DstWMonitor_eApplication_Function.ppiAPI_eRTOA_Exe ((char *)(s), "%g", (long)(r))

/* Text files */
#define T5_FEOLSTRING "\r\n"
#define T5_EOLCHR     '\n'
#define T5_EOLSKIPPED '\r'

/* Data exchange with network frames */
#ifndef T5DEF_BIGENDIAN
#ifdef T5_SWAPFUNCTIONS
extern void T5_COPYFRAMEWORD(T5_PTR d, T5_PTR s);
extern void T5_COPYFRAMEDWORD(T5_PTR d, T5_PTR s);
extern void T5_COPYFRAME64(T5_PTR d, T5_PTR s);
extern void T5_COPYWORDSTOLONG(T5_PTR d, T5_PTR s);
extern void T5_COPYWORDSTO64(T5_PTR d, T5_PTR s);
#else /*T5_SWAPFUNCTIONS*/
#define T5_COPYFRAMEWORD(d,s)   { \
    ((T5_PTBYTE)(d))[0] = ((T5_PTBYTE)(s))[1]; \
    ((T5_PTBYTE)(d))[1] = ((T5_PTBYTE)(s))[0]; \
    }
#define T5_COPYFRAMEDWORD(d,s)  { \
    ((T5_PTBYTE)(d))[0] = ((T5_PTBYTE)(s))[3]; \
    ((T5_PTBYTE)(d))[1] = ((T5_PTBYTE)(s))[2]; \
    ((T5_PTBYTE)(d))[2] = ((T5_PTBYTE)(s))[1]; \
    ((T5_PTBYTE)(d))[3] = ((T5_PTBYTE)(s))[0]; \
    }
#define T5_COPYFRAME64(d,s)  { \
    ((T5_PTBYTE)(d))[0] = ((T5_PTBYTE)(s))[7]; \
    ((T5_PTBYTE)(d))[1] = ((T5_PTBYTE)(s))[6]; \
    ((T5_PTBYTE)(d))[2] = ((T5_PTBYTE)(s))[5]; \
    ((T5_PTBYTE)(d))[3] = ((T5_PTBYTE)(s))[4]; \
    ((T5_PTBYTE)(d))[4] = ((T5_PTBYTE)(s))[3]; \
    ((T5_PTBYTE)(d))[5] = ((T5_PTBYTE)(s))[2]; \
    ((T5_PTBYTE)(d))[6] = ((T5_PTBYTE)(s))[1]; \
    ((T5_PTBYTE)(d))[7] = ((T5_PTBYTE)(s))[0]; \
    }
#define T5_COPYWORDSTOLONG(d,s)  { \
    ((T5_PTBYTE)(d))[0] = ((T5_PTBYTE)(s))[2]; \
    ((T5_PTBYTE)(d))[1] = ((T5_PTBYTE)(s))[3]; \
    ((T5_PTBYTE)(d))[2] = ((T5_PTBYTE)(s))[0]; \
    ((T5_PTBYTE)(d))[3] = ((T5_PTBYTE)(s))[1]; \
    }
#define T5_COPYWORDSTO64(d,s)  { \
    ((T5_PTBYTE)(d))[0] = ((T5_PTBYTE)(s))[6]; \
    ((T5_PTBYTE)(d))[1] = ((T5_PTBYTE)(s))[7]; \
    ((T5_PTBYTE)(d))[2] = ((T5_PTBYTE)(s))[4]; \
    ((T5_PTBYTE)(d))[3] = ((T5_PTBYTE)(s))[5]; \
    ((T5_PTBYTE)(d))[4] = ((T5_PTBYTE)(s))[2]; \
    ((T5_PTBYTE)(d))[5] = ((T5_PTBYTE)(s))[3]; \
    ((T5_PTBYTE)(d))[6] = ((T5_PTBYTE)(s))[0]; \
    ((T5_PTBYTE)(d))[7] = ((T5_PTBYTE)(s))[1]; \
    }
#endif /*T5_SWAPFUNCTIONS*/
#else /*T5DEF_BIGENDIAN*/
#define T5_COPYFRAMEWORD(d,s)   T5_MEMCPY((d),(s),2)
#define T5_COPYFRAMEDWORD(d,s)  T5_MEMCPY((d),(s),4)
#define T5_COPYFRAME64(d,s)     T5_MEMCPY((d),(s),8)
#define T5_COPYWORDSTOLONG(d,s) T5_MEMCPY((d),(s),4)
#define T5_COPYWORDSTO64(d,s)   T5_MEMCPY((d),(s),8)
#endif /*T5DEF_BIGENDIAN*/

/* Memory alignment to 4 bytes */
#define T5_ALIGNED(s)       (((s)%8)?((s)+8-((s)%8)):(s))

/* System memory */
typedef T5_PTR T5_MEM;

/* Sockets */
#ifdef T5DEF_ETHERNET
typedef int T5_SOCKET;
typedef T5_SOCKET * T5_PTSOCKET;
#define T5_INVSOCKET -1
#define T5_SOCKERROR -1
#endif /*T5DEF_ETHERNET*/
#define T5_UDPADDR struct sockaddr_in

/* CAN bus */
#define T5_CANPORT Tst_CANPORT
#define T5_CANMSG Tst_CANMSG

/* Serial */
#ifdef T5DEF_SERIAL
typedef struct
{
int handle;
}
T5_SERIAL;
typedef T5_SERIAL * T5_PTSERIAL;
#endif /*T5DEF_SERIAL*/

/* Variable Map */
#ifdef T5DEF_VARMAP
#define T5_HASHSYB       17
#define T5_HASHTAG       16
#define T5_HASHINDEX     16
#endif /*T5DEF_VARMAP*/

#define T5_OXC 137423433L

/* Extras... */
#define T5CAN_OEMALLOC
#define T5CAN_MAXDATA 255

/* default names for VFS files */
#ifndef T5VFS_NAME_HOT
#define T5VFS_NAME_HOT      "t5.hot"
#endif /*T5VFS_NAME_HOT*/
#ifndef T5VFS_NAME_COD
#define T5VFS_NAME_COD      "t5.cod"
#endif /*T5VFS_NAME_COD*/
#ifndef T5VFS_NAME_UPD
#define T5VFS_NAME_UPD      "t5.upd"
#endif /*T5VFS_NAME_UPD*/
#ifndef T5VFS_NAME_UPL
#define T5VFS_NAME_UPL      "t5.upl"
#endif /*T5VFS_NAME_UPL*/
#ifndef T5VFS_NAME_RSC
#define T5VFS_NAME_RSC      "t5.rsc"
#endif /*T5VFS_NAME_RSC*/
#ifndef T5VFS_NAME_RST
#define T5VFS_NAME_RST      "t5.rst"
#endif /*T5VFS_NAME_RST*/
#ifndef T5VFS_NAME_RBM
#define T5VFS_NAME_RBM      "t5.rbm"
#endif /*T5VFS_NAME_RBM*/
#ifndef T5VFS_NAME_RFN
#define T5VFS_NAME_RFN      "t5.rfn"
#endif /*T5VFS_NAME_RFN*/
#ifndef T5VFS_NAME_REG
#define T5VFS_NAME_REG      "t5.reg"
#endif /*T5VFS_NAME_REG*/
#ifndef T5VFS_NAME_REGNEXT
#define T5VFS_NAME_REGNEXT  "t5next.reg"
#endif /*T5VFS_NAME_REGNEXT*/
#ifndef T5VFS_NAME_INFO
#define T5VFS_NAME_INFO     "t5info.txt"
#endif /*T5VFS_NAME_INFO*/

/* STRATON include files */
#include "t5vmdb.h"
#include "t5mm.h"
#include "t5sp5.h"
#include "t5cs.h"
#include "t5mb.h"
#include "t5evs.h"
#include "t5asi.h"
#include "t5vmapp.h"
#include "t5tic.h"
#include "t5stdf.h"
#include "t5vmapi.h"
#include "t5vmsrv.h"
#include "t5heap.h"
#ifdef T5DEF_REG
#include "t5reg.h"
#endif /*T5DEF_REG*/
#ifdef T5DEF_VFS
#include "t5vfs.h"
#endif /*T5DEF_VFS*/
#ifdef T5DEF_RC
#include "t5rc.h"
#endif /*T5DEF_RC*/

#ifdef __cplusplus
}
#endif

#endif /*_T5VM_H_INCLUDED_*/

/* eof */
